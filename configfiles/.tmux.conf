# REMOVE ESCAPE DELAY IN NVIM/VIM
set -s escape-time 0
set -g status-interval 0

# REMAP PREFIX TO Control + a
set -g prefix C-a

# BIND 'C-a C-a' TO TYPE 'C-a'
bind C-a send-prefix
unbind C-b

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="pstree -p $$ | grep -qE '(n?vim?x?|view)'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
if-shell -b '[ "$(echo "$(tmux -V | cut -d" " -f2 | sed "s/[a-z]//g") < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$(tmux -V | cut -d" " -f2 | sed "s/[a-z]//g") >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
#'

# COPY MODE LIKE VIM
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# ENABLE MOUSE MODE
set -g mouse on

# SPLIT PANES USING | AND -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# RELOAD CONFIG FILE (CHANGE FILE LOCATION TO YOUR THE TMUX.CONF YOU WANT TO USE)
bind r source-file ~/.tmux.conf

#HISTORY LIMITE
set -g history-limit 5000

# Sets mode keys to use vim settings (for ? and / search in buffer scrolls)
set-window-option -g mode-keys vi


# Theme
# Set status bar background color to colour232/black
set -g status-bg colour236

# Set windows backgrounded in the status bar to colour246/gray
set -g status-fg colour246

# Status bar character length
set -g status-left-length 30

# Sets current selected window to colour208/orange
set-window-option -g window-status-current-style fg=colour208

# On the left-side of status in green: print '{session_name} {user}@{hostname}
set -g status-left '#[fg=green](#S) #(whoami)@#H#[default] ~ '

# On the right of status in colour228/pastel_yellow : print time 'H:M m.d.y'
set -g status-right '#[fg=colour228]Pane: #P | #[fg=colour228]%a %m/%d/%Y %H:%M:%S%P'
#set -g status-right '#H'

# Status bar refresh rate (seconds)
set -g status-interval 1

# Set pane colors (Terminal must be using utf-8)
set -g pane-border-style fg=white,bg=black
set -g pane-active-border-style bg=yellow
set -g pane-active-border-style fg=black

set -g pane-active-border-style fg=colour208,bg=default
